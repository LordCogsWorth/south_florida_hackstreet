{"ast":null,"code":"var _jsxFileName = \"/Users/kyleprice/south_florida_hackstreet/whiteboard-detector/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// Initialize Gemini AI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const [isDrawing, setIsDrawing] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Initialize hand tracking\n  const initializeHandTracking = useCallback(() => {\n    if (!handsRef.current) {\n      handsRef.current = new Hands({\n        locateFile: file => {\n          return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n        }\n      });\n      handsRef.current.setOptions({\n        maxNumHands: 1,\n        modelComplexity: 1,\n        minDetectionConfidence: 0.7,\n        minTrackingConfidence: 0.5\n      });\n      handsRef.current.onResults(onHandsResults);\n    }\n  }, []);\n\n  // Hand tracking results handler\n  const onHandsResults = useCallback(results => {\n    if (!isDrawingMode || !drawingCanvasRef.current) return;\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      const landmarks = results.multiHandLandmarks[0];\n      const pinchDetected = detectPinchGesture(landmarks);\n      if (pinchDetected && !isPinching) {\n        setIsPinching(true);\n        const point = getPinchPoint(landmarks);\n        setCurrentPath([point]);\n      } else if (pinchDetected && isPinching) {\n        const point = getPinchPoint(landmarks);\n        setCurrentPath(prev => [...prev, point]);\n        drawSolidLine(point);\n      } else if (!pinchDetected && isPinching) {\n        setIsPinching(false);\n        if (currentPath.length > 0) {\n          setAllPaths(prev => [...prev, currentPath]);\n          setCurrentPath([]);\n        }\n      }\n    } else {\n      if (isPinching) {\n        setIsPinching(false);\n        if (currentPath.length > 0) {\n          setAllPaths(prev => [...prev, currentPath]);\n          setCurrentPath([]);\n        }\n      }\n    }\n  }, [isDrawingMode, isPinching, currentPath]);\n\n  // Detect pinch gesture\n  const detectPinchGesture = landmarks => {\n    const thumbTip = landmarks[4];\n    const indexTip = landmarks[8];\n    const distance = Math.sqrt(Math.pow(thumbTip.x - indexTip.x, 2) + Math.pow(thumbTip.y - indexTip.y, 2));\n    return distance < 0.05;\n  };\n\n  // Get pinch point\n  const getPinchPoint = landmarks => {\n    const thumbTip = landmarks[4];\n    const indexTip = landmarks[8];\n    const canvas = drawingCanvasRef.current;\n    return {\n      x: (thumbTip.x + indexTip.x) / 2 * canvas.width,\n      y: (thumbTip.y + indexTip.y) / 2 * canvas.height\n    };\n  };\n\n  // Draw solid line\n  const drawSolidLine = currentPoint => {\n    const canvas = drawingCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (currentPath.length > 1) {\n      const prevPoint = currentPath[currentPath.length - 2];\n      ctx.strokeStyle = '#ff4444';\n      ctx.lineWidth = 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      ctx.moveTo(prevPoint.x, prevPoint.y);\n      ctx.lineTo(currentPoint.x, currentPoint.y);\n      ctx.stroke();\n    }\n  };\n\n  // Start drawing mode\n  const startDrawingMode = async () => {\n    if (!lastCompleteFrame) {\n      alert('Please analyze a video first!');\n      return;\n    }\n    try {\n      setIsDrawingMode(true);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      initializeHandTracking();\n      const hiddenVideo = document.createElement('video');\n      hiddenVideo.srcObject = stream;\n      hiddenVideo.autoplay = true;\n      hiddenVideo.playsInline = true;\n      hiddenVideo.muted = true;\n      if (handsRef.current) {\n        cameraRef.current = new Camera(hiddenVideo, {\n          onFrame: async () => {\n            if (handsRef.current && hiddenVideo) {\n              await handsRef.current.send({\n                image: hiddenVideo\n              });\n            }\n          },\n          width: 640,\n          height: 480\n        });\n        cameraRef.current.start();\n      }\n      setupDrawingCanvas();\n    } catch (error) {\n      console.error('Error starting drawing mode:', error);\n      setIsDrawingMode(false);\n    }\n  };\n\n  // Stop drawing mode\n  const stopDrawingMode = () => {\n    setIsDrawingMode(false);\n    setIsPinching(false);\n    if (cameraRef.current) {\n      cameraRef.current.stop();\n      cameraRef.current = null;\n    }\n    clearDrawing();\n  };\n\n  // Setup drawing canvas\n  const setupDrawingCanvas = () => {\n    const canvas = drawingCanvasRef.current;\n    const frameDisplay = frameDisplayRef.current;\n    if (canvas && frameDisplay) {\n      canvas.width = frameDisplay.naturalWidth;\n      canvas.height = frameDisplay.naturalHeight;\n      canvas.style.position = 'absolute';\n      canvas.style.top = '0';\n      canvas.style.left = '0';\n      canvas.style.pointerEvents = 'none';\n    }\n  };\n\n  // Clear drawing\n  const clearDrawing = () => {\n    const canvas = drawingCanvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n    setAllPaths([]);\n    setCurrentPath([]);\n  };\n\n  // File handling\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('video/')) {\n      setSelectedFile(file);\n      setAnalysisResult('');\n      setLastCompleteFrame(null);\n    }\n  };\n\n  // Convert file to base64\n  const fileToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  // Capture frame from video\n  const captureFrame = (video, timestamp) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx.drawImage(video, 0, 0);\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        const url = URL.createObjectURL(blob);\n        resolve({\n          url,\n          timestamp\n        });\n      });\n    });\n  };\n\n  // Analyze video and get final frame\n  const analyzeVideo = async () => {\n    if (!selectedFile) return;\n    setIsAnalyzing(true);\n    try {\n      const video = videoRef.current;\n      video.src = URL.createObjectURL(selectedFile);\n      await new Promise(resolve => {\n        video.onloadedmetadata = resolve;\n      });\n      const duration = video.duration;\n\n      // Get the last frame\n      video.currentTime = duration - 1;\n      await new Promise(resolve => {\n        video.onseeked = resolve;\n      });\n      const lastFrame = await captureFrame(video, duration - 1);\n      setLastCompleteFrame(lastFrame);\n\n      // Analyze with Gemini\n      const model = genAI.getGenerativeModel({\n        model: \"gemini-1.5-flash\"\n      });\n      const base64Data = await fileToBase64(selectedFile);\n      const videoData = base64Data.split(',')[1];\n      const result = await model.generateContent([\"Analyze this educational video. Focus on the final slide content and key concepts.\", {\n        inlineData: {\n          mimeType: selectedFile.type,\n          data: videoData\n        }\n      }]);\n      setAnalysisResult(result.response.text());\n    } catch (error) {\n      console.error('Error:', error);\n      setAnalysisResult('Error analyzing video.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFAF Video Analyzer with Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analyze videos and draw on the final slide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: analyzeVideo,\n        disabled: !selectedFile || isAnalyzing,\n        children: isAnalyzing ? 'Analyzing...' : 'Analyze Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), lastCompleteFrame && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDDBC\\uFE0F Final Slide:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: isDrawingMode ? stopDrawingMode : startDrawingMode,\n              style: {\n                padding: '10px 20px',\n                backgroundColor: isDrawingMode ? '#dc3545' : '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                marginRight: '10px'\n              },\n              children: isDrawingMode ? '🛑 Stop Drawing' : '✋ Start Hand Drawing'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), isDrawingMode && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearDrawing,\n              style: {\n                padding: '10px 20px',\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F Clear Drawing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            ref: frameDisplayRef,\n            src: lastCompleteFrame.url,\n            alt: \"Final slide\",\n            style: {\n              maxWidth: '100%',\n              display: 'block'\n            },\n            onLoad: setupDrawingCanvas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), isDrawingMode && /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: drawingCanvasRef,\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              pointerEvents: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), isDrawingMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            padding: '10px',\n            backgroundColor: '#e9ecef',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                color: isPinching ? '#28a745' : '#6c757d'\n              },\n              children: [\"\\uD83E\\uDD0F Pinch to draw: \", isPinching ? 'Active' : 'Inactive']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Paths drawn: \", allPaths.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '5px 0 0 0',\n              fontSize: '14px',\n              color: '#6c757d'\n            },\n            children: \"Use your thumb and index finger to pinch and draw red circles around areas of interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Analysis Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            backgroundColor: '#f8f9fa',\n            borderRadius: '5px',\n            border: '1px solid #dee2e6',\n            whiteSpace: 'pre-wrap'\n          },\n          children: analysisResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SxZjXayornAqI5dUtxU2zsmKqCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","GoogleGenerativeAI","jsxDEV","_jsxDEV","genAI","process","env","REACT_APP_GEMINI_API_KEY","App","_s","selectedFile","setSelectedFile","isAnalyzing","setIsAnalyzing","analysisResult","setAnalysisResult","isDrawing","setIsDrawing","videoRef","canvasRef","initializeHandTracking","useCallback","handsRef","current","Hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","onHandsResults","results","isDrawingMode","drawingCanvasRef","multiHandLandmarks","length","landmarks","pinchDetected","detectPinchGesture","isPinching","setIsPinching","point","getPinchPoint","setCurrentPath","prev","drawSolidLine","currentPath","setAllPaths","thumbTip","indexTip","distance","Math","sqrt","pow","x","y","canvas","width","height","currentPoint","ctx","getContext","prevPoint","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","moveTo","lineTo","stroke","startDrawingMode","lastCompleteFrame","alert","setIsDrawingMode","stream","navigator","mediaDevices","getUserMedia","video","hiddenVideo","document","createElement","srcObject","autoplay","playsInline","muted","cameraRef","Camera","onFrame","send","image","start","setupDrawingCanvas","error","console","stopDrawingMode","stop","clearDrawing","frameDisplay","frameDisplayRef","naturalWidth","naturalHeight","style","position","top","left","pointerEvents","clearRect","handleFileSelect","event","target","files","type","startsWith","setLastCompleteFrame","fileToBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","captureFrame","timestamp","videoWidth","videoHeight","drawImage","toBlob","blob","url","URL","createObjectURL","analyzeVideo","src","onloadedmetadata","duration","currentTime","onseeked","lastFrame","model","getGenerativeModel","base64Data","videoData","split","generateContent","inlineData","mimeType","data","response","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","name","ref","display","onClick","disabled","justifyContent","alignItems","padding","backgroundColor","color","border","borderRadius","cursor","marginRight","alt","maxWidth","onLoad","marginTop","gap","allPaths","margin","fontSize","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/kyleprice/south_florida_hackstreet/whiteboard-detector/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\n\n// Initialize Gemini AI\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState('');\n  const [isDrawing, setIsDrawing] = useState(false);\n  \n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Initialize hand tracking\n  const initializeHandTracking = useCallback(() => {\n    if (!handsRef.current) {\n      handsRef.current = new Hands({\n        locateFile: (file) => {\n          return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;\n        }\n      });\n\n      handsRef.current.setOptions({\n        maxNumHands: 1,\n        modelComplexity: 1,\n        minDetectionConfidence: 0.7,\n        minTrackingConfidence: 0.5\n      });\n\n      handsRef.current.onResults(onHandsResults);\n    }\n  }, []);\n\n  // Hand tracking results handler\n  const onHandsResults = useCallback((results) => {\n    if (!isDrawingMode || !drawingCanvasRef.current) return;\n\n    if (results.multiHandLandmarks && results.multiHandLandmarks.length > 0) {\n      const landmarks = results.multiHandLandmarks[0];\n      const pinchDetected = detectPinchGesture(landmarks);\n      \n      if (pinchDetected && !isPinching) {\n        setIsPinching(true);\n        const point = getPinchPoint(landmarks);\n        setCurrentPath([point]);\n      } else if (pinchDetected && isPinching) {\n        const point = getPinchPoint(landmarks);\n        setCurrentPath(prev => [...prev, point]);\n        drawSolidLine(point);\n      } else if (!pinchDetected && isPinching) {\n        setIsPinching(false);\n        if (currentPath.length > 0) {\n          setAllPaths(prev => [...prev, currentPath]);\n          setCurrentPath([]);\n        }\n      }\n    } else {\n      if (isPinching) {\n        setIsPinching(false);\n        if (currentPath.length > 0) {\n          setAllPaths(prev => [...prev, currentPath]);\n          setCurrentPath([]);\n        }\n      }\n    }\n  }, [isDrawingMode, isPinching, currentPath]);\n\n  // Detect pinch gesture\n  const detectPinchGesture = (landmarks) => {\n    const thumbTip = landmarks[4];\n    const indexTip = landmarks[8];\n    \n    const distance = Math.sqrt(\n      Math.pow(thumbTip.x - indexTip.x, 2) + \n      Math.pow(thumbTip.y - indexTip.y, 2)\n    );\n    \n    return distance < 0.05;\n  };\n\n  // Get pinch point\n  const getPinchPoint = (landmarks) => {\n    const thumbTip = landmarks[4];\n    const indexTip = landmarks[8];\n    const canvas = drawingCanvasRef.current;\n    \n    return {\n      x: ((thumbTip.x + indexTip.x) / 2) * canvas.width,\n      y: ((thumbTip.y + indexTip.y) / 2) * canvas.height\n    };\n  };\n\n  // Draw solid line\n  const drawSolidLine = (currentPoint) => {\n    const canvas = drawingCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    if (currentPath.length > 1) {\n      const prevPoint = currentPath[currentPath.length - 2];\n      \n      ctx.strokeStyle = '#ff4444';\n      ctx.lineWidth = 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      \n      ctx.beginPath();\n      ctx.moveTo(prevPoint.x, prevPoint.y);\n      ctx.lineTo(currentPoint.x, currentPoint.y);\n      ctx.stroke();\n    }\n  };\n\n  // Start drawing mode\n  const startDrawingMode = async () => {\n    if (!lastCompleteFrame) {\n      alert('Please analyze a video first!');\n      return;\n    }\n\n    try {\n      setIsDrawingMode(true);\n      \n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { width: 640, height: 480 } \n      });\n\n      initializeHandTracking();\n\n      const hiddenVideo = document.createElement('video');\n      hiddenVideo.srcObject = stream;\n      hiddenVideo.autoplay = true;\n      hiddenVideo.playsInline = true;\n      hiddenVideo.muted = true;\n\n      if (handsRef.current) {\n        cameraRef.current = new Camera(hiddenVideo, {\n          onFrame: async () => {\n            if (handsRef.current && hiddenVideo) {\n              await handsRef.current.send({ image: hiddenVideo });\n            }\n          },\n          width: 640,\n          height: 480\n        });\n        cameraRef.current.start();\n      }\n\n      setupDrawingCanvas();\n\n    } catch (error) {\n      console.error('Error starting drawing mode:', error);\n      setIsDrawingMode(false);\n    }\n  };\n\n  // Stop drawing mode\n  const stopDrawingMode = () => {\n    setIsDrawingMode(false);\n    setIsPinching(false);\n\n    if (cameraRef.current) {\n      cameraRef.current.stop();\n      cameraRef.current = null;\n    }\n\n    clearDrawing();\n  };\n\n  // Setup drawing canvas\n  const setupDrawingCanvas = () => {\n    const canvas = drawingCanvasRef.current;\n    const frameDisplay = frameDisplayRef.current;\n    \n    if (canvas && frameDisplay) {\n      canvas.width = frameDisplay.naturalWidth;\n      canvas.height = frameDisplay.naturalHeight;\n      canvas.style.position = 'absolute';\n      canvas.style.top = '0';\n      canvas.style.left = '0';\n      canvas.style.pointerEvents = 'none';\n    }\n  };\n\n  // Clear drawing\n  const clearDrawing = () => {\n    const canvas = drawingCanvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }\n    setAllPaths([]);\n    setCurrentPath([]);\n  };\n\n  // File handling\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('video/')) {\n      setSelectedFile(file);\n      setAnalysisResult('');\n      setLastCompleteFrame(null);\n    }\n  };\n\n  // Convert file to base64\n  const fileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  // Capture frame from video\n  const captureFrame = (video, timestamp) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx.drawImage(video, 0, 0);\n    \n    return new Promise((resolve) => {\n      canvas.toBlob((blob) => {\n        const url = URL.createObjectURL(blob);\n        resolve({ url, timestamp });\n      });\n    });\n  };\n\n  // Analyze video and get final frame\n  const analyzeVideo = async () => {\n    if (!selectedFile) return;\n\n    setIsAnalyzing(true);\n\n    try {\n      const video = videoRef.current;\n      video.src = URL.createObjectURL(selectedFile);\n      \n      await new Promise((resolve) => {\n        video.onloadedmetadata = resolve;\n      });\n\n      const duration = video.duration;\n      \n      // Get the last frame\n      video.currentTime = duration - 1;\n      await new Promise((resolve) => {\n        video.onseeked = resolve;\n      });\n      \n      const lastFrame = await captureFrame(video, duration - 1);\n      setLastCompleteFrame(lastFrame);\n\n      // Analyze with Gemini\n      const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n      const base64Data = await fileToBase64(selectedFile);\n      const videoData = base64Data.split(',')[1];\n\n      const result = await model.generateContent([\n        \"Analyze this educational video. Focus on the final slide content and key concepts.\",\n        {\n          inlineData: {\n            mimeType: selectedFile.type,\n            data: videoData\n          }\n        }\n      ]);\n\n      setAnalysisResult(result.response.text());\n\n    } catch (error) {\n      console.error('Error:', error);\n      setAnalysisResult('Error analyzing video.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🎯 Video Analyzer with Drawing</h1>\n        <p>Analyze videos and draw on the final slide</p>\n      </header>\n\n      <main className=\"App-main\">\n        <div className=\"upload-section\">\n          <input type=\"file\" accept=\"video/*\" onChange={handleFileSelect} />\n          {selectedFile && <p>Selected: {selectedFile.name}</p>}\n        </div>\n\n        <video ref={videoRef} style={{ display: 'none' }} />\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\n\n        <button onClick={analyzeVideo} disabled={!selectedFile || isAnalyzing}>\n          {isAnalyzing ? 'Analyzing...' : 'Analyze Video'}\n        </button>\n\n        {lastCompleteFrame && (\n          <div>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <h3>🖼️ Final Slide:</h3>\n              <div>\n                <button \n                  onClick={isDrawingMode ? stopDrawingMode : startDrawingMode}\n                  style={{ \n                    padding: '10px 20px',\n                    backgroundColor: isDrawingMode ? '#dc3545' : '#007bff',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '5px',\n                    cursor: 'pointer',\n                    marginRight: '10px'\n                  }}\n                >\n                  {isDrawingMode ? '🛑 Stop Drawing' : '✋ Start Hand Drawing'}\n                </button>\n                {isDrawingMode && (\n                  <button \n                    onClick={clearDrawing}\n                    style={{ \n                      padding: '10px 20px',\n                      backgroundColor: '#6c757d',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      cursor: 'pointer'\n                    }}\n                  >\n                    🗑️ Clear Drawing\n                  </button>\n                )}\n              </div>\n            </div>\n            \n            <div style={{ position: 'relative', display: 'inline-block' }}>\n              <img \n                ref={frameDisplayRef}\n                src={lastCompleteFrame.url} \n                alt=\"Final slide\" \n                style={{ maxWidth: '100%', display: 'block' }}\n                onLoad={setupDrawingCanvas}\n              />\n              {isDrawingMode && (\n                <canvas\n                  ref={drawingCanvasRef}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    pointerEvents: 'none'\n                  }}\n                />\n              )}\n            </div>\n            \n            {isDrawingMode && (\n              <div style={{ \n                marginTop: '10px', \n                padding: '10px', \n                backgroundColor: '#e9ecef', \n                borderRadius: '5px' \n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '20px' }}>\n                  <div style={{ \n                    display: 'flex', \n                    alignItems: 'center', \n                    color: isPinching ? '#28a745' : '#6c757d' \n                  }}>\n                    🤏 Pinch to draw: {isPinching ? 'Active' : 'Inactive'}\n                  </div>\n                  <div>\n                    Paths drawn: {allPaths.length}\n                  </div>\n                </div>\n                <p style={{ margin: '5px 0 0 0', fontSize: '14px', color: '#6c757d' }}>\n                  Use your thumb and index finger to pinch and draw red circles around areas of interest\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {analysisResult && (\n          <div>\n            <h3>📋 Analysis Summary:</h3>\n            <div style={{ \n              padding: '15px', \n              backgroundColor: '#f8f9fa', \n              borderRadius: '5px',\n              border: '1px solid #dee2e6',\n              whiteSpace: 'pre-wrap'\n            }}>\n              {analysisResult}\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}